name: re-run-ecr-task

on:
  push:
    branches:
      - master

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: eu-west-2
  ECS_CLUSTER_NAME: uima
  ECS_SERVICE_NAME: identity-service
  ECS_TASK_DEFINITION_NAME: uima-identity-service-deploy
  ECR_REPOSITORY_NAME: uima/identity-service
  ECR_IMAGE_TAG: latest
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  WAIT_FOR_WORKFLOW: ci.yml

jobs:
  re-run-task:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Wait for CI workflow to complete
      id: wait-for-ci
      uses: technote-space/wait-action@v0.2.2
      with:
        token: ${{ env.GITHUB_TOKEN }}
        workflow: ${{ env.WAIT_FOR_WORKFLOW }}
        ref: ${{ github.ref }}

    - name: Configure AWS credentials
      if: steps.wait-for-ci.outputs.status == 'success'
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-region: ${{ env.AWS_REGION }}
        aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}

    - name: Stop the running task
      if: steps.wait-for-ci.outputs.status == 'success'
      run: |
        TASK_ARN=$(aws ecs list-tasks --cluster $ECS_CLUSTER_NAME --service-name $ECS_SERVICE_NAME --desired-status RUNNING --query 'taskArns[0]' --output text)
        if [ ! -z "$TASK_ARN" ]; then
          aws ecs stop-task --task $TASK_ARN --cluster $ECS_CLUSTER_NAME
        fi

    - name: Run the updated task
      if: steps.wait-for-ci.outputs.status == 'success'
      run: |
        aws ecs update-service --cluster $ECS_CLUSTER_NAME --service $ECS_SERVICE_NAME --force-new-deployment --task-definition $ECS_TASK_DEFINITION_NAME:1
